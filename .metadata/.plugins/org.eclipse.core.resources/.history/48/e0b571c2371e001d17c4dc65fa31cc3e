package com.shunproduct.kpidashboard.service;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.LineNumberReader;

import org.springframework.stereotype.Service;

import com.shunproduct.kpidashboard.common.CSVDirectoryConst;

@Service
public class CSVTo2DArrayService {

	final String csvDir = CSVDirectoryConst.CSV_DIR;
	String[][] arrayData = null;

	public String[][] csvTo2DArray(String fileName) {

		String filePath = csvDir + "/" + fileName;

		File file = new File(filePath);

		if (file.exists()) {

			// csvファイルの行数を取得
			int linenumber = getLineNumber(file);

			// csvファイルを配列に格納
			arrayData = csvToArray(file, linenumber);
			nullReplace(arrayData, fileName, linenumber);
			// digitNumChange(arrayData, fileName, linenumber, digitNum);

			return arrayData;
		} else {
			System.out.println(fileName + "がありません。");
		}
		return null;
	}

	// csvファイルの行数を取得するメソッド
	public int getLineNumber(File file) {

		// linenumber ： 行数
		int linenumber = 0;
		try {
			FileReader fr = new FileReader(file);
			LineNumberReader lnr = new LineNumberReader(fr);
			while (lnr.readLine() != null) {
				linenumber++;
			}
			lnr.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return linenumber;
	}

	// csvファイルを配列のセットするメソッド
	public String[][] csvToArray(File file, int linenumber) {

		// 配列の準備
		String[][] arrayData = null;

		try {
			
			BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), "utf8"));

			arrayData = new String[linenumber][];
			String line = br.readLine();
			for (int row = 0; line != null; row++) {
				arrayData[row] = line.split(",", 0);
				line = br.readLine();
			}
			br.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return arrayData;
	}

	// 配列内データのnullを0に置換
	public void nullReplace(String[][] arrayData, String fileName, int linenumber) {
		linenumber = linenumber - 1;
		for (int row = 0; row <= linenumber; row++) {
			// System.out.println(fileName);
			for (int col = 0; col < arrayData[row].length; col++) {
				
				if (arrayData[row][col].equals("null") && (fileName.contains("accumulation"))) {
					
					// 何もしない
					
				}else if(arrayData[row][col].equals("null")) {
					
					arrayData[row][col] = "0";
					
				}
			}
		}
	}
}
